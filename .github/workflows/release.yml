name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the release'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.13.0'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install
      
    - name: Build frontend
      run: pnpm run build
      
    - name: Build with Maven
      run: mvn clean install -DskipTests
      
    - name: Get project version
      id: project-version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Project version: $VERSION"
        
    - name: Find JAR file
      id: find-jar
      run: |
        JAR_FILE=$(find target -name "*.jar" -not -name "*-sources.jar" -not -name "*-javadoc.jar" | head -1)
        if [ -z "$JAR_FILE" ]; then
          echo "No JAR file found in target directory"
          exit 1
        fi
        echo "jar-file=$JAR_FILE" >> $GITHUB_OUTPUT
        echo "JAR file: $JAR_FILE"
        
    - name: Get tag name
      id: tag-name
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag-name.outputs.tag }}
        release_name: Release ${{ steps.tag-name.outputs.tag }}
        body: |
          ## Keycloak Account Theme Release ${{ steps.tag-name.outputs.tag }}
          
          ### Installation
          1. Download the `khode-account-${{ steps.project-version.outputs.version }}.jar` file
          2. Copy it to your Keycloak server's `providers` directory
          3. Restart your Keycloak server
          4. The custom account theme will be available in your realm settings
          
          ### Changes
          - Built from commit: ${{ github.sha }}
          - Project version: ${{ steps.project-version.outputs.version }}
          
        draft: false
        prerelease: false
        
    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ${{ steps.find-jar.outputs.jar-file }}
        asset_name: khode-account-${{ steps.project-version.outputs.version }}.jar
        asset_content_type: application/java-archive
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          target/*.jar
          dist/
        retention-days: 30
